name: .NET CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      api:
        image: sahzodus/mytodo-api-dockerhub
        ports:
          - 5023/tcp # Adjust the port if your API uses a different port

    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the project
      - name: Build
        run: dotnet build --no-restore

      # Run tests
      - name: Test
        run: dotnet test --no-build --verbosity normal

      # Clean up Docker login credentials
      - name: Clean up Docker login credentials
        run: docker logout

      # Publish the project
      - name: Publish
        run: dotnet publish -c Release -o ${{ github.workspace }}/myapp

      # Upload artifact for deployment
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{ github.workspace }}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write
      contents: read

    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      # Download artifact from build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
          path: ${{ github.workspace }}/downloaded-artifact

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E6BB7CFFB19D42059D2A78FC02E08BAB }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F26AB7C6E0FD4A4EA5AD07E4C318DEF3 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BCEDDDF63DD3468DBCE0BBD357BDE61C }}
          allow-no-subscriptions: true

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'TodoAppShohzod'
          slot-name: 'Production'
          package: ${{ github.workspace }}/downloaded-artifact
